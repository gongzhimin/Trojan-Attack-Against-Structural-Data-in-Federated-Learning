# This file may be used to create an environment using:
# $ conda create --name <env> --file <this file>
# conda install --yes --file requirements.txt
# platform: linux-64
_libgcc_mutex=0.1=conda_forge
_openmp_mutex=4.5=1_gnu
absl-py=0.12.0=pypi_0
astunparse=1.6.3=pypi_0
blas=1.0=mkl
bzip2=1.0.8=h7f98852_4
ca-certificates=2020.12.5=ha878542_0
cachetools=4.2.1=pypi_0
certifi=2020.12.5=py36h5fab9bb_1
chardet=4.0.0=pypi_0
cpuonly=1.0=0
dataclasses=0.8=pyh787bdff_0
deepctr-torch=0.2.6=pypi_0
ffmpeg=4.3=hf484d3e_0
flatbuffers=1.12=pypi_0
freetype=2.10.4=h0708190_1
gast=0.3.3=pypi_0
gmp=6.2.1=h58526e2_0
gnutls=3.6.13=h85f3911_1
google-auth=1.28.0=pypi_0
google-auth-oauthlib=0.4.4=pypi_0
google-pasta=0.2.0=pypi_0
grpcio=1.32.0=pypi_0
h5py=2.10.0=pypi_0
idna=2.10=pypi_0
importlib-metadata=3.10.0=pypi_0
intel-openmp=2020.2=254
joblib=1.0.1=pypi_0
jpeg=9b=h024ee3a_2
keras-preprocessing=1.1.2=pypi_0
lame=3.100=h7f98852_1001
lcms2=2.12=h3be6417_0
ld_impl_linux-64=2.35.1=hea4e1c9_2
libffi=3.3=h58526e2_2
libgcc-ng=9.3.0=h2828fa1_18
libgomp=9.3.0=h2828fa1_18
libiconv=1.16=h516909a_0
libpng=1.6.37=h21135ba_2
libprotobuf=3.15.7=h780b84a_0
libstdcxx-ng=9.3.0=h6de172a_18
libtiff=4.1.0=h2733197_1
libuv=1.41.0=h7f98852_0
lz4-c=1.9.3=h9c3ff4c_0
markdown=3.3.4=pypi_0
mkl=2020.2=256
mkl-service=2.3.0=py36h8c4c3a4_2
mkl_fft=1.3.0=py36h54f3939_0
mkl_random=1.2.0=py36h7c3b610_1
ncurses=6.2=h58526e2_4
nettle=3.6=he412f7d_0
ninja=1.10.2=h4bd325d_0
numpy=1.19.2=py36h54aff64_0
numpy-base=1.19.2=py36hfa32c7d_0
oauthlib=3.1.0=pypi_0
olefile=0.46=pyh9f0ad1d_1
openh264=2.1.1=h780b84a_0
openssl=1.1.1k=h7f98852_0
opt-einsum=3.3.0=pypi_0
pandas=1.1.5=py36h284efc9_0
pillow=8.2.0=py36he98fc37_0
pip=21.0.1=pyhd8ed1ab_0
protobuf=3.15.7=pypi_0
pyasn1=0.4.8=pypi_0
pyasn1-modules=0.2.8=pypi_0
python=3.6.13=hffdb5ce_0_cpython
python-dateutil=2.8.1=py_0
python_abi=3.6=1_cp36m
pytorch=1.8.1=py3.6_cpu_0
pytz=2021.1=pyhd8ed1ab_0
pyyaml=5.4.1=pypi_0
readline=8.0=he28a2e2_2
requests=2.25.1=pypi_0
requests-oauthlib=1.3.0=pypi_0
rsa=4.7.2=pypi_0
scikit-learn=0.24.1=pypi_0
scipy=1.5.4=pypi_0
setuptools=49.6.0=py36h5fab9bb_3
six=1.15.0=pyh9f0ad1d_0
sklearn=0.0=pypi_0
sqlite=3.35.4=h74cdb3f_0
tensorboard=2.4.1=pypi_0
tensorboard-plugin-wit=1.8.0=pypi_0
tensorboardx=2.2=pyhd8ed1ab_0
tensorflow=2.4.1=pypi_0
tensorflow-estimator=2.4.0=pypi_0
termcolor=1.1.0=pypi_0
threadpoolctl=2.1.0=pypi_0
tk=8.6.10=h21135ba_1
torch-tb-profiler=0.1.0=pypi_0
torchaudio=0.8.1=py36
torchvision=0.9.1=py36_cpu
tqdm=4.60.0=pypi_0
typing_extensions=3.7.4.3=py_0
urllib3=1.26.4=pypi_0
werkzeug=1.0.1=pypi_0
wheel=0.36.2=pyhd3deb0d_0
wrapt=1.12.1=pypi_0
xz=5.2.5=h516909a_1
zipp=3.4.1=pypi_0
zlib=1.2.11=h516909a_1010
zstd=1.4.9=ha95c52a_0
# 1. 判断 python 版本 python2/python3
# 2. 创建虚拟环境 conda/pip
# 3. 依据 requirements.txt 导入相关依赖
#       pip install -r requirements.txt
# 4. 找到主文件/项目的入口文件，直接执行，按报错信息解决相应问题
# 5. 配置信息/超参数与程序分离 yaml/tf.cfg/sh 脚本
# 6. 使用 git 进行版本管理/备份 public/private
# 7. 云服务器的使用，先使用 cpu-only 的主机调通代码，再使用带 gpu 的主机运行
# 8. 关于调试 pycharm
